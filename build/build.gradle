defaultTasks 'all'

def jshintConfig = 'build/jshint.json'
def jshintOutput = 'jshint.xml'
def srcDirs = ['controllers', 'models', 'public', 'views']
def testDir = 'test'

task jshint << {
	description = 'runs jshint on all non-test and lib JS files'
	def jsPattern = ~/.*(?<!raty(\.min)?)\.js/
	def jsFiles = [];
	srcDirs.each { srcDir ->
		new File(srcDir).eachFileRecurse {
			if (it.canonicalPath =~ jsPattern) {
		    	jsFiles << it.canonicalPath
			}
		}
	}

	def command = "jshint ${jsFiles.join(' ')} --config ${jshintConfig} --jslint-reporter"
	def output = command.execute().text
	def jshintFile = new File(jshintOutput)
	if (jshintFile.exists()) jshintFile.delete()
	jshintFile.write(output)
}

task jasmine << {
	description = 'runs jasmine specs'
	println "./${testDir}/specs.sh --verbose".execute().text
}

task zombie << {
	description = 'runs functional tests'
	new File("${testDir}/integration").eachFileRecurse {
		println "node ${it.canonicalPath}".execute().text
	}
}

task test(dependsOn: ['jasmine', 'zombie']) << {
	println 'Running tests...'
}

task all(dependsOn: ['jshint', 'test']) << {
	println 'Build complete'
}